aes:
  archv: 8.0
  feat: FEAT_AES
  name: AESD and AESE instructions
  note: v8.0 crypto
afp:
  archv: 8.7
  feat: FEAT_AFP
  name: Alternate floating-point behavior
  note: v8.7 mandatory
asimd:
  archv: 8.0
  feat: ' '
  name: Advanced SIMD
  note: ' '
asimddp:
  archv: 8.2
  feat: FEAT_DotProd
  name: Advanced SIMD dot product instructions
  note: v8.2 optional, v8.4 mandatory
asimdfhm:
  archv: 8.2
  feat: FEAT_FHM
  name: Floating-point half-precision multiplication instructions
  note: v8.2 optional, v8.4 depends
asimdhp:
  archv: 8.2
  feat: FEAT_FP16
  name: Advanced SIMD with FEAT_FP16
  note: ' '
asimdrdm:
  archv: 8.1
  feat: FEAT_RDM
  name: Advanced SIMD rounding double multiply accumulate instructions
  note: v8.1 mandatory
atomics:
  archv: 8.1
  feat: FEAT_LSE
  name: Large System Extensions
  note: v8.1 mandatory
bf16:
  archv: 8.2
  feat: FEAT_BF16
  name: AArch64 BFloat16 instructions
  note: v8.2 optional, v8.6 mandatory
bti:
  archv: 8.5
  feat: FEAT_BTI
  name: Branch Target Identification
  note: v8.5 mandatory
cpuid:
  archv: 8.0
  feat: ' '
  name: ' '
  note: ' '
crc32:
  archv: 8.0
  feat: FEAT_CRC32
  name: CRC32 instructions
  note: v8.0 optional, v8.1 mandatory
cssc:
  archv: 8.9
  feat: FEAT_CSSC
  name: Common short sequence compression instructions
  note: v8.9/9.4
dcpodp:
  archv: 8.2
  feat: FEAT_DPB2
  name: DC CVADP instruction
  note: v8.2 optional, v8.5 mandatory
dcpop:
  archv: 8.2
  feat: FEAT_DPB
  name: DC CVAP instruction
  note: v8.2 mandatory
dgh:
  archv: 8.0
  feat: FEAT_DGH
  name: Data Gathering Hint
  note: v8.0 optional
dit:
  archv: 8.4
  feat: FEAT_DIT
  name: Data Independent Timing instructions
  note: v8.4 mandatory
ebf16:
  archv: 9.2
  feat: FEAT_EBF16
  name: AArch64 Extended BFloat16 instructions
  note: v9.2 optional
ecv:
  archv: 8.6
  feat: FEAT_ECV
  name: Enhanced Counter Virtualization
  note: v8.6 mandatory
evtstrm:
  archv: 8.0
  feat: ' '
  name: ' '
  note: ' '
f8cvt:
  archv: 9.2
  feat: FEAT_FP8
  name: FP8 convert instructions
  note:
f8dp2:
  archv: 9.2
  feat: FEAT_FP8DOT2
  name: FP8 2-way dot product to half-precision instructions
  note:
f8dp4:
  archv: 9.2
  feat: FEAT_FP8DOT4
  name: FP8 4-way dot product to single-precision instructions
  note:
f8fma:
  archv: 9.2
  feat: FEAT_FP8FMA
  name: FP8 multiply-accumulate to half-precision and single-precision instructions
  note:
faminmax:
  archv: 9.2
  feat: FEAT_FAMINMAX
  name: Floating-point maximum and minimum absolute value instructions
  note:
fcma:
  archv: 8.3
  feat: FEAT_FCMA
  name: Floating-point complex number instructions
  note: v8.3 mandatory
flagm:
  archv: 8.2
  feat: FEAT_FlagM
  name: Flag manipulation instructions
  note: v8.2 optional, v8.4 mandatory
flagm2:
  archv: 8.5
  feat: FEAT_FlagM2
  name: Enhancements to flag manipulation instructions
  note: v8.5 mandatory
fp:
  archv: 8.0
  feat: ' '
  name: Floating-point
  note: ' '
fphp:
  archv: 8.2
  feat: FEAT_FP16
  name: Half-precision floating-point data processing
  note: v8.2 depends, v8.4 depends
fpmr:
  archv: 9.2
  feat: FEAT_FPMR
  name: Floating-point Mode Register
  note:
frint:
  archv: 8.5
  feat: FEAT_FRINTTS
  name: Floating-point to integer instructions
  note: v8.5 mandatory
hbc:
  archv: 8.8
  feat: FEAT_HBC
  name: Hinted Conditional Branches
  note: v8.8 mandatory
i8mm:
  archv: 8.2
  feat: FEAT_I8MM
  name: AArch64 Int8 matrix multiplication instructions
  note: v8.2 optional, v8.6 mandatory
ilrcpc:
  archv: 8.4
  feat: FEAT_LRCPC2
  name: Load-Acquire RCpc instructions v2
  note: v8.2 optional, v8.4 mandatory
jscvt:
  archv: 8.3
  feat: FEAT_JSCVT
  name: JavaScript conversion instructions
  note: v8.3 mandatory
lrcpc:
  archv: 8.3
  feat: FEAT_LRCPC
  name: Load-Acquire RCpc instructions
  note: v8.3 mandatory
lrcpc3:
  archv: 8.2
  feat: FEAT_LRCPC3
  name: Load-Acquire RCpc instructions version 3
  note:
lse128:
  archv: 9.3
  feat: FEAT_LSE128
  name: 128-bit Atomics
  note:
lut:
  archv: 9.2
  feat: FEAT_LUT
  name: Lookup table instructions with 2-bit and 4-bit indices
  note:
mops:
  archv: 8.8
  feat: FEAT_MOPS
  name: Memory copy or set
  note: v8.8 mandatory
mte:
  archv: 8.5
  feat: FEAT_MTE
  name: Memory Tagging Extension
  note: v8.5 optional
mte3:
  archv: 8.5
  feat: FEAT_MTE3
  name: MTE Asymmetric Fault Handling
  note: v8.5 optional, v8.7 mandatory
paca:
  archv: 8.4
  feat: FEAT_FPAC
  name: Faulting on AUT* instructions and combined pointer authentication instructions
  note: v8.4 optional
pacg:
  archv: 8.4
  feat: ' '
  name: ' '
  note: ' '
pmull:
  archv: 8.0
  feat: FEAT_PMULL
  name: PMULL, PMULL2 instructions.
  note: v8.0 crypto
poe:
  archv: 8.8
  feat: FEAT_S1POE
  name: Stage 1 permission overlays
  note:
rng:
  archv: 8.5
  feat: FEAT_RNG
  name: Random number generator
  note: v8.5 optional
rpres:
  archv: 8.7
  feat: FEAT_RPRES
  name: Increased precision of Reciprocal Estimate and Reciprocal Square Root Estimate
  note: v8.7 optional
rprfm:
  archv: 8.6
  feat: FEAT_RPRFM
  name: Range prefetch hint instruction
  note: PRFM is v8.6+ so I assume this one too
sb:
  archv: 8.0
  feat: FEAT_SB
  name: Speculation Barrier
  note: v8.0 optional, v8.5 mandatory
sha1:
  archv: 8.0
  feat: FEAT_SHA1
  name: SHA1* instructions.
  note: v8.0 crypto
sha2:
  archv: 8.0
  feat: FEAT_SHA256
  name: SHA256* instructions.
  note: v8.0 crypto
sha3:
  archv: 8.2
  feat: FEAT_SHA3
  name: Advanced SIMD SHA3 instructions
  note: v8.2 optional
sha512:
  archv: 8.2
  feat: FEAT_SHA512
  name: Advanced SIMD SHA512 instructions
  note: v8.2 optional
sm3:
  archv: 8.2
  feat: FEAT_SM3
  name: Advanced SIMD SM3 instructions
  note: v8.2 optional
sm4:
  archv: 8.2
  feat: FEAT_SM4
  name: Advanced SIMD SM4 instructions
  note: v8.2 optional
sme:
  archv: 9.2
  feat: FEAT_SME
  name: Scalable Matrix Extension
  note: v9.2 optional
sme2:
  archv: 9.2
  feat: FEAT_SME2
  name: Scalable Matrix Extension version 2
  note:
sme2p1:
  archv: 9.2
  feat: FEAT_SME2P1
  name: Scalable Matrix Extension version 2.1
  note:
smeb16b16:
  archv: 9.2
  feat: FEAT_SME_B16B16
  name: Non-widening BFloat16 to BFloat16 SME ZA-targeting arithmetic
  note:
smeb16f32:
  archv: 9.2
  feat: FEAT_SME
  name: BFloat16 outer product instructions
  note: v9.2 optional
smef16f16:
  archv: 9.2
  feat: FEAT_SME_F16F16
  name: Non-widening half-precision FP16 to FP16 arithmetic for SME2
  note:
smef16f32:
  archv: 9.2
  feat: FEAT_SME
  name: Half-precision floating-point outer product instructions
  note: v9.2 optional
smef32f32:
  archv: 9.2
  feat: FEAT_SME
  name: Single-precision floating-point outer product instructions
  note: v9.2 optional
smef64f64:
  archv: 9.2
  feat: FEAT_SME_F64F64
  name: Double-precision floating-point outer product instructions
  note: v9.2 optional
smef8f16:
  archv: 9.2
  feat: FEAT_SME_F8F16
  name: SME2 ZA-targeting FP8 multiply-accumulate, dot product, and outer product to half-precision instructions
  note:
smef8f32:
  archv: 9.2
  feat: FEAT_SME_F8F32
  name: SME2 ZA-targeting FP8 multiply-accumulate, dot product, and outer product to single-precision instructions
  note:
smefa64:
  archv: 9.2
  feat: FEAT_SME_FA64
  name: Full Streaming SVE mode instructions
  note: v9.2 optional
smei16i64:
  archv: 9.2
  feat: FEAT_SME_I16I64
  name: 16-bit to 64-bit integer widening outer product instructions
  note: v9.2 optional
smei8i32:
  archv: 9.2
  feat: FEAT_SME
  name: Scalable Matrix Extension
  note: v9.2 optional
smelutv2:
  archv: 9.2
  feat: FEAT_SME_LUTV2
  name: Lookup table instructions with 4-bit indices and 8-bit elements
  note:
ssbs:
  archv: 8.0
  feat: FEAT_SSBS
  name: Speculative Store Bypass Safe
  note: v8.0 optional
sve:
  archv: 8.2
  feat: FEAT_SVE
  name: Scalable Vector Extension
  note: v8.2 optional
sve2:
  archv: 9.0
  feat: FEAT_SVE2
  name: Scalable Vector Extension version 2
  note: v9.0 optional
sve2p1:
  archv: 9.0
  feat: FEAT_SVE2
  name: Scalable Vector Extension version 2.1
  note: v9.0 optional
sveaes:
  archv: 9.0
  feat: FEAT_SVE_AES
  name: Scalable Vector AES instructions
  note: v9.0 optional
sveb16b16:
  archv: 9.2
  feat: FEAT_SVE_B16B16
  name: Non-widening BFloat16 to BFloat16 arithmetic for SVE2 and SME2
  note:
svebf16:
  archv: 8.2
  feat: FEAT_BF16
  name: AArch64 BFloat16 instructions (SVE)
  note: v8.2 optional, v8.6 mandatory
svebitperm:
  archv: 9.0
  feat: FEAT_SVE_BitPerm
  name: Scalable Vector Bit Permutes instruction
  note: v9.0 optional
sveebf16:
  archv: 9.2
  feat: FEAT_EBF16
  name: AArch64 Extended BFloat16 instructions (SVE)
  note: v9.2 optional
svef32mm:
  archv: 8.2
  feat: FEAT_F32MM
  name: Single-precision Matrix Multiplication (SVE)
  note: v8.2 optional
svef64mm:
  archv: 8.2
  feat: FEAT_F64MM
  name: Double-precision Matrix Multiplication (SVE)
  note: v8.2 optional
svei8mm:
  archv: 8.2
  feat: FEAT_I8MM
  name: AArch64 Int8 matrix multiplication instructions (SVE)
  note: v8.2 optional, v8.6 mandatory
svepmull:
  archv: 9.0
  feat: FEAT_SVE_PMULL128
  name: Scalable Vector PMULL instructions
  note: v9.0 optional
svesha3:
  archv: 9.0
  feat: FEAT_SVE_SHA3
  name: Scalable Vector SHA3 instructions
  note: v9.0 optional
svesm4:
  archv: 9.0
  feat: FEAT_SVE_SM4
  name: Scalable Vector SM4 instructions
  note: v9.0 optional
uscat:
  archv: 8.2
  feat: FEAT_LSE2
  name: Unaligned single-copy atomicity and atomic functions with a 16-byte address range aligned to 16-bytes are supported
  note: v8.2 optional, v8.4 mandatory
wfxt:
  archv: 8.7
  feat: FEAT_WFxT
  name: WFE and WFI instructions with timeout
  note: v8.7 mandatory
